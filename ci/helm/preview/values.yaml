
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    # add tls configuration
    domain: napps.dev.nuxeo.com
    exposer: Ingress
    http: true
    tlsacme: true
    tlsSecretName: napps-tls
    urltemplate: '"{{.Service}}-{{.Namespace}}.{{.Domain}}"'

cleanup:
  Args:
    - --cleanup
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded

nuxeo:
  fullnameOverride: preview
  nuxeo:
    podLabels:
      branch: "$BRANCH_NAME"
      team: napps
      resource: pod
      usage: preview
    service:
      annotations:
        fabric8.io/expose: "true"
        fabric8.io/ingress.annotations: |-
          nginx.ingress.kubernetes.io/proxy-body-size: 0
          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;
      labels:
        branch: "$BRANCH_NAME"
        team: napps
        resource: service
        usage: preview
    image:
      repository: ${DOCKER_REGISTRY}/${ORG}/nuxeo-retention
      tag: ${VERSION}
      pullPolicy: Always
    persistence:
      enabled: disable
    packages: nuxeo-web-ui amazon-s3-online-storage
    livenessProbe:
      initialDelaySeconds: 420
      periodSeconds: 20
      successThreshold: 1
      failureThreshold: 5
      timeoutSeconds: 10
    readinessProbe:
        periodSeconds: 20
        initialDelaySeconds: 420
        successThreshold: 1
        timeoutSeconds: 10
        failureThreshold: 5
    customParams: |-
      org.nuxeo.connect.url=https://nos-preprod-connect.nuxeocloud.com/nuxeo/site/
      nuxeo.templates=default,s3-retention
      # AWS
      nuxeo.aws.accessKeyId=${env:AWS_ACCESS_KEY}
      nuxeo.aws.secretKey=${env:AWS_ACCESS_SECRET}
      nuxeo.aws.region=${env:AWS_REGION}
      nuxeo.s3storage.bucket_prefix=$BUCKET_PREFIX
      nuxeo.s3storage.bucket=${env:AWS_S3_BUCKET}
      # RETENTION
      nuxeo.retention.bucket=${env:AWS_S3_RETENTION_BUCKET}
      nuxeo.retention.bucket_prefix=$BUCKET_PREFIX
      nuxeo.retention.mode=$RETENTION_MODE
      nuxeo.retention.compliance.enabled=$COMPLIANCE_MODE_ENABLED
    customEnvs:
      - name: NUXEO_CLID
        valueFrom:
          secretKeyRef:
            name: instance-clid
            key: CLID
      - name: AWS_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: aws-iam-user-credentials
            key: access_key_id
      - name: AWS_ACCESS_SECRET
        valueFrom:
          secretKeyRef:
            name: aws-iam-user-credentials
            key: secret_access_key
      - name: AWS_REGION
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: region
      - name: AWS_S3_BUCKET
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: retention.bucket
      - name: AWS_S3_RETENTION_BUCKET
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: retention.bucket.$RETENTION_MODE
      - name: AWS_S3_BUCKET_PREFIX
        value: $BUCKET_PREFIX
    tolerations:
    - key: team
      operator: Equal
      value: napps
      effect: NoSchedule
    nodeSelector:
      team: napps
  mongodb:
    deploy: false
  postgresql:
    deploy: true
    useStatefulSet: true
    image:
      tag: "11.7.0"
    initdbScripts:
      db-init.sql: |
        CREATE ROLE nuxeo WITH PASSWORD 'nuxeo' LOGIN;
        CREATE DATABASE nuxeo ENCODING 'UTF8' OWNER nuxeo;
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    master:
      labels:
        branch: "${BRANCH_NAME}"
        resource: deployment
        team: napps
        usage: preview
      tolerations:
      - key: team
        operator: Equal
        value: napps
        effect: NoSchedule
      nodeSelector:
        team: napps
  elasticsearch:
    deploy: false
